version: "3.8"

services:
  nba-mcp-synthesis:
    build: .
    container_name: nba-mcp-synthesis-prod
    environment:
      - PROJECT_NAME=nba-mcp-synthesis
      - SPORT_NAME=NBA
      - NBA_MCP_CONTEXT=production
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    secrets:
      - google_api_key
      - anthropic_api_key
      - deepseek_api_key
      - openai_api_key
      - db_password
      - db_host
      - db_port
      - slack_webhook_url
      - linear_api_key
      - linear_team_id
      - linear_project_id
    depends_on:
      - postgres
      - redis
    networks:
      - nba-mcp-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G
          cpus: "0.5"

  postgres:
    image: postgres:15
    container_name: nba-mcp-postgres-prod
    environment:
      - POSTGRES_DB=nba_mcp_synthesis
      - POSTGRES_USER=nba_mcp_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db_password
    networks:
      - nba-mcp-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nba_mcp_user -d nba_mcp_synthesis"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"

  redis:
    image: redis:7
    container_name: nba-mcp-redis-prod
    volumes:
      - redis_data:/data
    networks:
      - nba-mcp-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.25"
        reservations:
          memory: 256M
          cpus: "0.1"

  nginx:
    image: nginx:alpine
    container_name: nba-mcp-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - nba-mcp-synthesis
    networks:
      - nba-mcp-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
        reservations:
          memory: 128M
          cpus: "0.1"

secrets:
  google_api_key:
    file: ./secrets/GOOGLE_API_KEY_NBA_MCP_SYNTHESIS_WORKFLOW.env
  anthropic_api_key:
    file: ./secrets/ANTHROPIC_API_KEY_NBA_MCP_SYNTHESIS_WORKFLOW.env
  deepseek_api_key:
    file: ./secrets/DEEPSEEK_API_KEY_NBA_MCP_SYNTHESIS_WORKFLOW.env
  openai_api_key:
    file: ./secrets/OPENAI_API_KEY_NBA_MCP_SYNTHESIS_WORKFLOW.env
  db_password:
    file: ./secrets/DB_PASSWORD_NBA_MCP_SYNTHESIS_WORKFLOW.env
  db_host:
    file: ./secrets/DB_HOST_NBA_MCP_SYNTHESIS_WORKFLOW.env
  db_port:
    file: ./secrets/DB_PORT_NBA_MCP_SYNTHESIS_WORKFLOW.env
  slack_webhook_url:
    file: ./secrets/SLACK_WEBHOOK_URL_BIG_CAT_BETS_GLOBAL_WORKFLOW.env
  linear_api_key:
    file: ./secrets/LINEAR_API_KEY_BIG_CAT_BETS_GLOBAL_WORKFLOW.env
  linear_team_id:
    file: ./secrets/LINEAR_TEAM_ID_BIG_CAT_BETS_GLOBAL_WORKFLOW.env
  linear_project_id:
    file: ./secrets/LINEAR_PROJECT_ID_BIG_CAT_BETS_GLOBAL_WORKFLOW.env

volumes:
  postgres_data:
  redis_data:

networks:
  nba-mcp-network:
    driver: bridge


